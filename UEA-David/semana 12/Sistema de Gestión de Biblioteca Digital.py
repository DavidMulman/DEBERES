# =======================================
# Sistema de Gesti√≥n de Biblioteca Digital con Men√∫
# =======================================

class Libro:
    def __init__(self, titulo, autor, categoria, isbn):
        self.info = (titulo, autor)  # Tupla inmutable
        self.categoria = categoria
        self.isbn = isbn

    def __str__(self):
        return f"{self.info[0]} - {self.info[1]} (Categor√≠a: {self.categoria}, ISBN: {self.isbn})"


class Usuario:
    def __init__(self, nombre, user_id):
        self.nombre = nombre
        self.user_id = user_id
        self.libros_prestados = []

    def __str__(self):
        return f"Usuario: {self.nombre} (ID: {self.user_id})"


class Biblioteca:
    def __init__(self):
        self.libros = {}            # Diccionario {ISBN: Libro}
        self.usuarios = {}          # Diccionario {ID: Usuario}
        self.ids_usuarios = set()   # Conjunto para IDs √∫nicos

    def agregar_libro(self, libro):
        if libro.isbn in self.libros:
            print("‚ö†Ô∏è El libro ya existe en la biblioteca.")
        else:
            self.libros[libro.isbn] = libro
            print(f"‚úÖ Libro agregado: {libro}")

    def eliminar_libro(self, isbn):
        if isbn in self.libros:
            eliminado = self.libros.pop(isbn)
            print(f"‚ùå Libro eliminado: {eliminado}")
        else:
            print("‚ö†Ô∏è No se encontr√≥ el libro con ese ISBN.")

    def registrar_usuario(self, usuario):
        if usuario.user_id in self.ids_usuarios:
            print("‚ö†Ô∏è El ID de usuario ya est√° registrado.")
        else:
            self.usuarios[usuario.user_id] = usuario
            self.ids_usuarios.add(usuario.user_id)
            print(f"‚úÖ Usuario registrado: {usuario}")

    def baja_usuario(self, user_id):
        if user_id in self.usuarios:
            eliminado = self.usuarios.pop(user_id)
            self.ids_usuarios.remove(user_id)
            print(f"‚ùå Usuario dado de baja: {eliminado}")
        else:
            print("‚ö†Ô∏è No se encontr√≥ el usuario con ese ID.")

    def prestar_libro(self, user_id, isbn):
        if user_id not in self.usuarios:
            print("‚ö†Ô∏è Usuario no registrado.")
            return
        if isbn not in self.libros:
            print("‚ö†Ô∏è Libro no disponible en la biblioteca.")
            return

        usuario = self.usuarios[user_id]
        libro = self.libros.pop(isbn)
        usuario.libros_prestados.append(libro)
        print(f"üìö Libro prestado: {libro} a {usuario.nombre}")

    def devolver_libro(self, user_id, isbn):
        if user_id not in self.usuarios:
            print("‚ö†Ô∏è Usuario no registrado.")
            return

        usuario = self.usuarios[user_id]
        libro_devuelto = None

        for libro in usuario.libros_prestados:
            if libro.isbn == isbn:
                libro_devuelto = libro
                break

        if libro_devuelto:
            usuario.libros_prestados.remove(libro_devuelto)
            self.libros[isbn] = libro_devuelto
            print(f"üîÑ Libro devuelto: {libro_devuelto}")
        else:
            print("‚ö†Ô∏è El usuario no ten√≠a este libro en pr√©stamo.")

    def buscar_por_titulo(self, titulo):
        return [libro for libro in self.libros.values() if libro.info[0].lower() == titulo.lower()]

    def buscar_por_autor(self, autor):
        return [libro for libro in self.libros.values() if libro.info[1].lower() == autor.lower()]

    def buscar_por_categoria(self, categoria):
        return [libro for libro in self.libros.values() if libro.categoria.lower() == categoria.lower()]

    def listar_libros_prestados(self, user_id):
        if user_id in self.usuarios:
            usuario = self.usuarios[user_id]
            if usuario.libros_prestados:
                print(f"üìå Libros prestados a {usuario.nombre}:")
                for libro in usuario.libros_prestados:
                    print(f"   - {libro}")
            else:
                print(f"üìå {usuario.nombre} no tiene libros prestados.")
        else:
            print("‚ö†Ô∏è Usuario no registrado.")

    def listar_libros_por_categoria(self):
        if not self.libros:
            print("‚ö†Ô∏è No hay libros en la biblioteca.")
            return

        categorias = {}
        for libro in self.libros.values():
            categorias.setdefault(libro.categoria, []).append(libro)

        print("üìÇ Lista de libros por categor√≠a:")
        for categoria, libros in categorias.items():
            print(f"\nüìå {categoria}:")
            for libro in libros:
                print(f"   - {libro}")


# =======================================
# PROGRAMA PRINCIPAL CON MEN√ö
# =======================================
if __name__ == "__main__":
    biblioteca = Biblioteca()

    while True:
        print("\n===== üìö MEN√ö BIBLIOTECA DIGITAL =====")
        print("1. Agregar libro")
        print("2. Eliminar libro")
        print("3. Registrar usuario")
        print("4. Dar de baja usuario")
        print("5. Prestar libro")
        print("6. Devolver libro")
        print("7. Buscar libro por t√≠tulo")
        print("8. Buscar libro por autor")
        print("9. Buscar libro por categor√≠a")
        print("10. Listar libros prestados de un usuario")
        print("11. Listar todos los libros por categor√≠a")
        print("0. Salir")
        opcion = input("Seleccione una opci√≥n: ")

        if opcion == "1":
            titulo = input("T√≠tulo: ")
            autor = input("Autor: ")
            categoria = input("Categor√≠a: ")
            isbn = input("ISBN: ")
            libro = Libro(titulo, autor, categoria, isbn)
            biblioteca.agregar_libro(libro)

        elif opcion == "2":
            isbn = input("Ingrese ISBN del libro a eliminar: ")
            biblioteca.eliminar_libro(isbn)

        elif opcion == "3":
            nombre = input("Nombre del usuario: ")
            user_id = input("ID √∫nico del usuario: ")
            usuario = Usuario(nombre, user_id)
            biblioteca.registrar_usuario(usuario)

        elif opcion == "4":
            user_id = input("Ingrese ID del usuario a dar de baja: ")
            biblioteca.baja_usuario(user_id)

        elif opcion == "5":
            user_id = input("ID del usuario: ")
            isbn = input("ISBN del libro a prestar: ")
            biblioteca.prestar_libro(user_id, isbn)

        elif opcion == "6":
            user_id = input("ID del usuario: ")
            isbn = input("ISBN del libro a devolver: ")
            biblioteca.devolver_libro(user_id, isbn)

        elif opcion == "7":
            titulo = input("Ingrese el t√≠tulo a buscar: ")
            resultados = biblioteca.buscar_por_titulo(titulo)
            if resultados:
                print("‚úÖ Libros encontrados:")
                for libro in resultados:
                    print(f"   - {libro}")
            else:
                print("‚ö†Ô∏è No se encontraron libros con ese t√≠tulo.")

        elif opcion == "8":
            autor = input("Ingrese el autor a buscar: ")
            resultados = biblioteca.buscar_por_autor(autor)
            if resultados:
                print("‚úÖ Libros encontrados:")
                for libro in resultados:
                    print(f"   - {libro}")
            else:
                print("‚ö†Ô∏è No se encontraron libros de ese autor.")

        elif opcion == "9":
            categoria = input("Ingrese la categor√≠a a buscar: ")
            resultados = biblioteca.buscar_por_categoria(categoria)
            if resultados:
                print("‚úÖ Libros encontrados:")
                for libro in resultados:
                    print(f"   - {libro}")
            else:
                print("‚ö†Ô∏è No se encontraron libros en esa categor√≠a.")

        elif opcion == "10":
            user_id = input("ID del usuario: ")
            biblioteca.listar_libros_prestados(user_id)

        elif opcion == "11":
            biblioteca.listar_libros_por_categoria()

        elif opcion == "0":
            print("üëã Saliendo del sistema de biblioteca digital...")
            break

        else:
            print("‚ö†Ô∏è Opci√≥n no v√°lida. Intente nuevamente.")
